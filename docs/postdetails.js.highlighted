<div class="highlight"><pre><span class="cm">/**</span>
<span class="cm"> * PostDetails Controller</span>
<span class="cm"> *</span>
<span class="cm"> * @module 72lions</span>
<span class="cm"> * @class PostDetails</span>
<span class="cm"> * @namespace STL.Controller</span>
<span class="cm"> * @extends STL.Controller.Base</span>
<span class="cm"> * @author Thodoris Tsiridis</span>
<span class="cm"> * @version 1.0</span>
<span class="cm"> */</span>
<span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">PostDetails</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="cm">/**</span>
<span class="cm">     * A reference to this class</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.PostDetails</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The id of the current article</span>
<span class="cm">     *</span>
<span class="cm">     * @type String</span>
<span class="cm">     * @default null</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">currentId</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>


    <span class="cm">/**</span>
<span class="cm">     * This function is executed right after the initialized function is called</span>
<span class="cm">     *</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">postInitialize</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>

    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Loads a page or post from the model</span>
<span class="cm">     *</span>
<span class="cm">     * @param  {String} sectionSlug The name of the page&#39;s slug</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">load</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">sectionSlug</span><span class="p">)</span> <span class="p">{</span>

        <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentId</span> <span class="o">!==</span> <span class="nx">sectionSlug</span><span class="p">){</span>

            <span class="k">this</span><span class="p">.</span><span class="nx">currentId</span> <span class="o">=</span> <span class="nx">sectionSlug</span><span class="p">;</span>

            <span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;PostDetails&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">currentId</span><span class="p">))</span> <span class="o">!==</span> <span class="s1">&#39;undefined&#39;</span><span class="p">){</span>
                <span class="nx">onPostDetailsLoaded</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;PostDetails&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">currentId</span><span class="p">));</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;onDataStartedLoading&#39;</span><span class="p">});</span>
                <span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">getDetails</span><span class="p">(</span><span class="nx">sectionSlug</span><span class="p">,</span> <span class="nx">onPostDetailsLoaded</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
            <span class="p">}</span>

        <span class="p">}</span>

    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Shows the view</span>
<span class="cm">     *</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">show</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">show</span><span class="p">();</span>
    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Hides the view</span>
<span class="cm">     *</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">hide</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">hide</span><span class="p">();</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">currentId</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Shows a a section with a specific name</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @param {Object} result The data that came from the model</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">onPostDetailsLoaded</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;PostDetails&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">currentId</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">currentId</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">currentId</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">render</span><span class="p">();</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;onSectionLoaded&#39;</span><span class="p">});</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>
    <span class="p">};</span>

<span class="p">};</span>

<span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">PostDetails</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">Base</span><span class="p">();</span>
</pre></div>
