<div class="highlight"><pre><span class="cm">/**</span>
<span class="cm"> * Sections Manager Controller</span>
<span class="cm"> *</span>
<span class="cm"> * @module 72lions</span>
<span class="cm"> * @class SectionsManager</span>
<span class="cm"> * @namespace STL.Controller</span>
<span class="cm"> * @extends STL.Controller.Base</span>
<span class="cm"> * @author Thodoris Tsiridis</span>
<span class="cm"> * @version 1.0</span>
<span class="cm"> */</span>
<span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">SectionsManager</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

    <span class="cm">/**</span>
<span class="cm">     * A reference to this class</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.SectionsManager</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The initial state of the website</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type Object</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">initialState</span> <span class="o">=</span> <span class="nx">Router</span><span class="p">.</span><span class="nx">getState</span><span class="p">();</span>

    <span class="cm">/**</span>
<span class="cm">     * The Portfolio Controller</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.Portfolio</span>
<span class="cm">     * @property portfolio</span>
<span class="cm">     * @default undefined</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">portfolio</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The Experiments Controller</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.Experiments</span>
<span class="cm">     * @property experiments</span>
<span class="cm">     * @default undefined</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">experiments</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The Blog Controller</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.Blog</span>
<span class="cm">     * @property blog</span>
<span class="cm">     * @default undefined</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">blog</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The initial state of the website</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.Contact</span>
<span class="cm">     * @property contact</span>
<span class="cm">     * @default undefined</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">contact</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The Post Details Controller</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.PostDetails</span>
<span class="cm">     * @property postDetails</span>
<span class="cm">     * @default undefined</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">postDetails</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The array that will hold all the sections</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type Array</span>
<span class="cm">     * @property sections</span>
<span class="cm">     * @default undefined</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">sections</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The number of total sections</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type Number</span>
<span class="cm">     * @default 4</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">totalSections</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The current section name</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type String</span>
<span class="cm">     * @default &#39;-&#39;</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">currentSection</span> <span class="o">=</span> <span class="s1">&#39;-&#39;</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * This function is executed right after the initialized function is called</span>
<span class="cm">     *</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">postInitialize</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>

        <span class="nx">portfolio</span> <span class="o">=</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">ControllerManager</span><span class="p">.</span><span class="nx">initializeController</span><span class="p">({</span>
                <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Portfolio&#39;</span><span class="p">,</span>
                <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;portfolio&#39;</span><span class="p">,</span>
                <span class="nx">model</span><span class="o">:</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Lookup</span><span class="p">.</span><span class="nx">getModel</span><span class="p">({</span>
                    <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Posts&#39;</span><span class="p">,</span>
                    <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;portfolioModel&#39;</span>
                <span class="p">})</span>
        <span class="p">});</span>

        <span class="nx">experiments</span> <span class="o">=</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">ControllerManager</span><span class="p">.</span><span class="nx">initializeController</span><span class="p">({</span>
            <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Experiments&#39;</span><span class="p">,</span>
            <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;experiments&#39;</span><span class="p">,</span>
            <span class="nx">view</span><span class="o">:</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Lookup</span><span class="p">.</span><span class="nx">getView</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Experiments&#39;</span><span class="p">,</span> <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;experiments&#39;</span><span class="p">}),</span>
            <span class="nx">model</span><span class="o">:</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Lookup</span><span class="p">.</span><span class="nx">getModel</span><span class="p">({</span>
                <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Posts&#39;</span><span class="p">,</span>
                <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;experimentsModel&#39;</span>
            <span class="p">})</span>
        <span class="p">});</span>

        <span class="nx">blog</span> <span class="o">=</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">ControllerManager</span><span class="p">.</span><span class="nx">initializeController</span><span class="p">({</span>
            <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Blog&#39;</span><span class="p">,</span>
            <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;blog&#39;</span><span class="p">,</span>
            <span class="nx">model</span><span class="o">:</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Lookup</span><span class="p">.</span><span class="nx">getModel</span><span class="p">({</span>
                <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Posts&#39;</span><span class="p">,</span>
                <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;blogModel&#39;</span>
            <span class="p">})</span>
        <span class="p">});</span>

        <span class="nx">sections</span> <span class="o">=</span> <span class="p">[{</span><span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;portfolio&#39;</span><span class="p">,</span> <span class="nx">object</span><span class="o">:</span> <span class="nx">portfolio</span><span class="p">},</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s1">&#39;experiments&#39;</span><span class="p">,</span> <span class="nx">object</span><span class="o">:</span> <span class="nx">experiments</span><span class="p">},</span> <span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s1">&#39;blog&#39;</span><span class="p">,</span> <span class="nx">object</span><span class="o">:</span> <span class="nx">blog</span><span class="p">}];</span>

        <span class="nx">postDetails</span> <span class="o">=</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">ControllerManager</span><span class="p">.</span><span class="nx">initializeController</span><span class="p">({</span>
            <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;PostDetails&#39;</span><span class="p">,</span>
            <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;postDetails&#39;</span><span class="p">,</span>
            <span class="nx">model</span><span class="o">:</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Lookup</span><span class="p">.</span><span class="nx">getModel</span><span class="p">({</span>
                <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;Posts&#39;</span><span class="p">,</span>
                <span class="nx">id</span><span class="o">:</span><span class="s1">&#39;postDetailsModel&#39;</span>
            <span class="p">})</span>
        <span class="p">});</span>

    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Shows a a section with a specific name</span>
<span class="cm">     *</span>
<span class="cm">     * @param {Object} state The state of the url</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">showSectionWithName</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">state</span><span class="p">){</span>
        <span class="kd">var</span> <span class="nx">len</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">section</span><span class="p">;</span>

        <span class="nx">len</span> <span class="o">=</span> <span class="nx">sections</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>

        <span class="k">if</span><span class="p">(</span><span class="nx">state</span> <span class="o">&amp;&amp;</span> <span class="nx">state</span><span class="p">.</span><span class="nx">pathSegments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;category&#39;</span><span class="p">){</span>
            <span class="c1">// Trackk ajax calls with google analytics</span>
            <span class="nx">_gaq</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s1">&#39;_trackPageview&#39;</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="nx">state</span><span class="p">.</span><span class="nx">path</span><span class="p">]);</span>

            <span class="nx">section</span> <span class="o">=</span> <span class="nx">state</span><span class="p">.</span><span class="nx">pathSegments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>

            <span class="c1">//If this is the same section then don&#39;t do anything</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">currentSection</span> <span class="o">===</span> <span class="nx">section</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="nx">currentSection</span> <span class="o">=</span> <span class="nx">section</span><span class="p">;</span>

            <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>

                <span class="k">if</span><span class="p">(</span><span class="nx">sections</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">name</span> <span class="o">===</span> <span class="nx">section</span><span class="p">){</span>

                    <span class="nx">sections</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">object</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>

                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>

                    <span class="nx">sections</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">object</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>

                <span class="p">}</span>

            <span class="p">}</span>

            <span class="nx">postDetails</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>

        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>

            <span class="k">if</span> <span class="p">(</span><span class="nx">state</span><span class="p">)</span> <span class="p">{</span>

                <span class="c1">// Trackk ajax calls with google analytics</span>
                <span class="nx">_gaq</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s1">&#39;_trackPageview&#39;</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="nx">state</span><span class="p">.</span><span class="nx">path</span><span class="p">]);</span>

                <span class="nx">section</span> <span class="o">=</span> <span class="nx">state</span><span class="p">.</span><span class="nx">pathSegments</span><span class="p">[</span><span class="nx">state</span><span class="p">.</span><span class="nx">pathSegments</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>

                <span class="c1">//If this is the same section then don&#39;t do anything</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">currentSection</span> <span class="o">===</span> <span class="nx">section</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">return</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="nx">currentSection</span> <span class="o">=</span> <span class="nx">section</span><span class="p">;</span>

                <span class="c1">// if we don&#39;t have a path segment with category at its first position</span>
                <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nx">sections</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">object</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>
                <span class="p">}</span>

                <span class="nx">postDetails</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">section</span><span class="p">);</span>

            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>

                <span class="c1">// Trackk ajax calls with google analytics</span>
                <span class="nx">_gaq</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s1">&#39;_trackPageview&#39;</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">]);</span>

                <span class="nx">section</span> <span class="o">=</span> <span class="s1">&#39;blog&#39;</span><span class="p">;</span>

                <span class="c1">//If this is the same section then don&#39;t do anything</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">currentSection</span> <span class="o">===</span> <span class="nx">section</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">return</span><span class="p">;</span>
                <span class="p">}</span>

                <span class="nx">currentSection</span> <span class="o">=</span> <span class="nx">section</span><span class="p">;</span>

                <span class="nx">postDetails</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>

                <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">len</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>

                    <span class="k">if</span><span class="p">(</span><span class="nx">sections</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">name</span> <span class="o">!==</span> <span class="s1">&#39;blog&#39;</span><span class="p">){</span>
                        <span class="nx">sections</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">object</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>
                    <span class="p">}</span>

                <span class="p">}</span>

                <span class="nx">blog</span><span class="p">.</span><span class="nx">show</span><span class="p">();</span>

            <span class="p">}</span>



        <span class="p">}</span>

    <span class="p">};</span>

<span class="p">};</span>

<span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">SectionsManager</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">Base</span><span class="p">();</span>
</pre></div>
