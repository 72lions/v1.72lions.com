<div class="highlight"><pre><span class="cm">/**</span>
<span class="cm"> * Tags Controller</span>
<span class="cm"> *</span>
<span class="cm"> * @module 72lions</span>
<span class="cm"> * @class Tags</span>
<span class="cm"> * @namespace STL.Controller</span>
<span class="cm"> * @extends STL.Controller.Base</span>
<span class="cm"> * @author Thodoris Tsiridis</span>
<span class="cm"> * @version 1.0</span>
<span class="cm"> */</span>
<span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">Tags</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>

    <span class="cm">/**</span>
<span class="cm">     * A reference to this class</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type STL.Controller.Blog</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">me</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * An array with all the portfolio items</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type Array</span>
<span class="cm">     * @default []</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">portfolioItems</span> <span class="o">=</span> <span class="p">[];</span>

    <span class="cm">/**</span>
<span class="cm">     * The name of the data from the model</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @type String</span>
<span class="cm">     * @default &#39;Tag&#39;</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">modelName</span> <span class="o">=</span> <span class="s1">&#39;Tag&#39;</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * The id of the tag</span>
<span class="cm">     *</span>
<span class="cm">     * @public</span>
<span class="cm">     * @type Number</span>
<span class="cm">     * @default 0</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">tagId</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="cm">/**</span>
<span class="cm">     * This function is executed right after the initialized function is called</span>
<span class="cm">     *</span>
<span class="cm">     * @param {Object} options The options to use when initialing the controller</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">postInitialize</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">){</span>

        <span class="k">if</span><span class="p">(</span><span class="nx">options</span><span class="p">){</span>
            <span class="nx">modelName</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">modelName</span> <span class="o">||</span> <span class="nx">modelName</span><span class="p">;</span>
        <span class="p">}</span>

    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Shows the view</span>
<span class="cm">     *</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">show</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>

        <span class="k">this</span><span class="p">.</span><span class="nx">loadData</span><span class="p">();</span>

    <span class="p">};</span>
    <span class="cm">/**</span>
<span class="cm">     * Hides the view</span>
<span class="cm">     *</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">hide</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">hide</span><span class="p">();</span>
    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Loads the data from the model</span>
<span class="cm">     *@param {NUmber} tagId The id of the tag that we need to load</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">loadData</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">tagId</span><span class="p">)</span> <span class="p">{</span>

        <span class="k">this</span><span class="p">.</span><span class="nx">tagId</span> <span class="o">=</span> <span class="nx">tagId</span><span class="p">;</span>

        <span class="k">if</span><span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">get</span><span class="p">(</span><span class="nx">modelName</span><span class="o">+</span><span class="nx">tagId</span><span class="p">))</span> <span class="o">===</span> <span class="s1">&#39;undefined&#39;</span><span class="p">){</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;onDataStartedLoading&#39;</span><span class="p">});</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">getTags</span><span class="p">(</span><span class="nx">tagId</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="nx">onDataLoaded</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
             <span class="nx">onDataLoaded</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">getModel</span><span class="p">().</span><span class="nx">get</span><span class="p">(</span><span class="nx">modelName</span><span class="o">+</span><span class="nx">tagId</span><span class="p">));</span>
        <span class="p">}</span>

    <span class="p">};</span>

    <span class="cm">/**</span>
<span class="cm">     * Callback function for when we get all the data from the ajax call</span>
<span class="cm">     *</span>
<span class="cm">     * @private</span>
<span class="cm">     * @param  {Object} result The result object</span>
<span class="cm">     * @author Thodoris Tsiridis</span>
<span class="cm">     */</span>
    <span class="kd">var</span> <span class="nx">onDataLoaded</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">i</span><span class="p">;</span>

        <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">result</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>

            <span class="nx">portfolioItems</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span>
                <span class="nx">STL</span><span class="p">.</span><span class="nx">ControllerManager</span><span class="p">.</span><span class="nx">initializeController</span><span class="p">({</span>
                    <span class="nx">type</span><span class="o">:</span><span class="s1">&#39;ThumbnailItem&#39;</span><span class="p">,</span>
                    <span class="nx">id</span><span class="o">:</span><span class="nx">modelName</span> <span class="o">+</span> <span class="s1">&#39;ThumbnailItem&#39;</span> <span class="o">+</span> <span class="nx">result</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">Id</span><span class="p">,</span>
                    <span class="nx">model</span><span class="o">:</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Lookup</span><span class="p">.</span><span class="nx">getModel</span><span class="p">({</span>
                        <span class="nx">data</span><span class="o">:</span><span class="nx">result</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
                    <span class="p">})</span>
                 <span class="p">})</span>
            <span class="p">);</span>

            <span class="nx">portfolioItems</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getView</span><span class="p">().</span><span class="nx">setAsFeatured</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
            <span class="nx">portfolioItems</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getView</span><span class="p">().</span><span class="nx">render</span><span class="p">();</span>
            <span class="nx">portfolioItems</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getView</span><span class="p">().</span><span class="nx">showDescription</span><span class="p">();</span>
            <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">addPortfolioItem</span><span class="p">(</span><span class="nx">portfolioItems</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getView</span><span class="p">().</span><span class="nx">domElement</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">render</span><span class="p">();</span>

        <span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s1">&#39;onSectionLoaded&#39;</span><span class="p">});</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">getView</span><span class="p">().</span><span class="nx">show</span><span class="p">();</span>

    <span class="p">};</span>

<span class="p">};</span>

<span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">Tags</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">STL</span><span class="p">.</span><span class="nx">Controller</span><span class="p">.</span><span class="nx">Base</span><span class="p">();</span>
</pre></div>
